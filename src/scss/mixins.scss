@import 'vars';

@mixin prefixOnly($property, $value, $prefixes, $important: false) {
  @each $prefix in $prefixes {
    @if $important {
      -#{$prefix}-#{$property}: $value !important;
    } @else {
      -#{$prefix}-#{$property}: $value;
    }
  }
}

@mixin prefix($property, $value, $prefixes, $important: false) {
  @include prefixOnly($property, $value, $prefixes);
  @if $important {
    #{$property}: $value !important;
  } @else {
    #{$property}: $value;
  }
}

@mixin borderBox() {
  @include prefix(box-sizing, border-box, $browsers);
}

@mixin borderRadius($value, $important: false) {
  @include prefix(border-radius, $value, $browsers, $important);
}

@mixin fixedTop($top, $left, $right) {
  position: fixed;
  top: $top;
  left: $left;
  right: $right;
}

@mixin clear() {
  display: table;
  clear: both;
  height: 0;
  content: '';
}

@mixin clearBefore() {
  &:before {
    @include clear();
  }
}

@mixin clearAfter() {
  &:after {
    @include clear();
  }
}

@mixin clearBoth() {
  @include clearBefore();
  @include clearAfter();
}

@mixin zeroGap() {
  margin: 0;
  padding: 0;
}

@mixin zeroListGap() {
  @include zeroGap();
  list-style-type: none;
}

@mixin boxShadow($offX, $offY, $blur, $spread, $colour) {
  @include prefix(box-shadow, #{$offX}px #{$offY}px #{$blur}px #{$spread}px #{$colour}, $browsers);
}

@mixin boxShadowInset($offX, $offY, $blur, $spread, $colour) {
  @include prefix(box-shadow, inset #{$offX}px #{$offY}px #{$blur}px #{$spread}px #{$colour}, $browsers);
}

@mixin boxShadowNoSpread($offX, $offY, $blur, $colour) {
  @include prefix(box-shadow, #{$offX}px #{$offY}px #{$blur}px #{$colour}, $browsers);
}

@mixin transition($opt, $time) {
  @include prefix(transition, #{$opt} #{$time}, $browsers);
}

@mixin listStyleNoneNoSpacing() {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

@mixin fontSmoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin nav_linkArrowIcon() {
  @include iconFont($colour_nav_link_hov, $icon_font);

  content: $icon_dn_arr;
  position: $icon_level0_pos;
  top: $icon_level0_top;
  right: $icon_level0_right;
  font-size: $icon_font_sz;
}

@mixin iconFont($color, $font) {
  color: $color;
  font-family: $font;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  @include fontSmoothing();
}

@mixin flexbox() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@mixin flexCol() {
  @include flexbox();
  flex-direction: column;
}

@mixin flexRow() {
  @include flexbox();
  flex-direction: row;
}

@mixin opacity($value) {
  @include prefix(opacity, $value, browsers);
  filter: alpha(opacity=$value*100);
}

@mixin grid($gap, $tempCols) {
  display: grid;
  grid-gap: #{$gap};
  grid-template-columns: #{$tempCols};
}

@mixin shimmer() {
  background: #f6f7f8;
  background-image: linear-gradient(to right, rgba(255,255,255,0.1) 10%, rgba(0,0,0,0.05) 25%, rgba(255,255,255,0.1) 40%);
  background-repeat: no-repeat;
  background-size: 800px 104px; 
  display: inline-block;
  position: relative; 
  
  @include prefix(animation-duration, 1.25s, $browsers);
  @include prefix(animation-fill-mode, forwards, $browsers);
  @include prefix(animation-iteration-count, infinite, $browsers);
  @include prefix(animation-name, placeholderShimmer, $browsers);
  @include prefix(animation-timing-function, linear, $browsers);
}